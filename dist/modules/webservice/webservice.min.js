app.register({core:{ws:{apiAuth:function(){var e=$.Deferred();return app.core.session.tokenIsValid(),e.resolve(),e.promise()},call:function(e,s,n,o,r,t){var p=$.Deferred(),a={0:function(){return p.reject(),p.promise()},302:function(e,s){return app.config.debug&&app.core.ui.toast("Appel non géré par l'API","warning"),s.reject(),s.promise()},400:function(e,s){return app.config.debug&&app.core.ui.toast("Echec de la requêteé ("+e.responseJSON.code+"): "+e.responseJSON.message,"warning"),s.reject(),s.promise()},401:function(e,s){return app.config.debug&&app.core.ui.toast("Accès refusé ("+e.responseJSON.code+"): "+e.responseJSON.message,"warning"),"Invalid API authentication"===e.responseJSON.message?(app.core.session.tokenExpirationDate=null,app.core.session.save(),app.core.ws.apiAuth().always(function(){s.resolve()}),s.promise()):(s.reject(),s.promise())},404:function(e,n){return app.config.debug&&app.core.ui.toast("Page non trouvée pour l'URL : "+baseUrl+s,"warning"),n.reject(),n.promise()},500:function(e,s){return app.config.debug&&app.core.ui.toast("Le serveur à rencontré une erreur","warning"),s.reject(),s.promise()}};return app.core.ws.apiAuth().then(function(){isDefined(o)||(o=function(e,s,n){}),isDefined(r)||(r=function(e,s,n){}),isDefined(e)||(e="GET"),isDefined(n)||(n={});var i=app.config.webservice.protocol+"://"+app.config.webservice.hostname+(t?"":app.config.webservice.apiBaseUri);"POST"===e&&(n=JSON.stringify(n)),$.ajax({url:i+s,method:e,data:n,crossDomain:!0,success:function(e,s,n){204===n.status&&(e="{}"),"object"!=typeof e&&(e=JSON.parse(e)),o(e,s,n),p.resolve()},beforeSend:function(s){app.core.session.hasOwnProperty("access_token")&&null!==app.core.session.access_token&&s.setRequestHeader("Authorization",app.core.utils.ucfirst(app.core.session.token_type)+" "+app.core.session.access_token),"POST"===e&&s.setRequestHeader("Content-Type","application/json; charset=utf-8")},error:function(e,s,n){r(e,s,n),a[e.status](e,p)}})},function(){app.core.history.currentState.path!==app.ctrl.states.login.path&&app.ctrl.login()}),p.promise()}},session:{tokenIsValid:function(){if(!app.core.session.tokenIsSet())return!1;var e=app.core.utils.parseDate(app.core.session.tokenExpirationDate);return!isDefined(e)||e>app.core.utils.parseDate()},tokenIsSet:function(){return null!==app.core.session.access_token},updateTokenExpirationDate:function(){var e=app.core.utils.parseApiDate();e.setSeconds(e.getSeconds()+parseInt(app.core.session.expires_in,10)-60),app.core.session.tokenExpirationDate=e,app.core.session.save()}}}});